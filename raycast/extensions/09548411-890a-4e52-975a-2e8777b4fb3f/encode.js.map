{
  "version": 3,
  "sources": ["../src/encode.tsx", "../src/util/clipboard.ts"],
  "sourcesContent": ["import { showToast, Toast } from \"@raycast/api\";\nimport { contents, update } from \"./util/clipboard\";\nexport default async () => {\n  try {\n    const clipboard = await contents();\n    const encoded = encodeURIComponent(clipboard);\n    await update(encoded);\n  } catch (e) {\n    if (typeof e === \"string\") {\n      await showToast({\n        style: Toast.Style.Failure,\n        title: \"Encode failed\",\n        message: e,\n      });\n    }\n  }\n};\n", "import { showHUD, Clipboard } from \"@raycast/api\";\n\nconst isEmpty = (string: string) => {\n  return string.length === 0;\n};\n\nexport const contents = async () => {\n  const clipboard = (await Clipboard.readText()) || \"\";\n  if (isEmpty(clipboard)) throw \"Clipboard is empty\";\n  else return clipboard;\n};\n\nexport const update = async (contents: string) => {\n  await Clipboard.copy(contents);\n  await showHUD(\"Copied to clipboard\");\n};\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAiC,wBCAjC,IAAAC,EAAmC,wBAE7BC,EAAWC,GACRA,EAAO,SAAW,EAGdC,EAAW,SAAY,CAClC,IAAMC,EAAa,MAAM,YAAU,SAAS,GAAM,GAClD,GAAIH,EAAQG,CAAS,EAAG,KAAM,qBACzB,OAAOA,CACd,EAEaC,EAAS,MAAOF,GAAqB,CAChD,MAAM,YAAU,KAAKA,CAAQ,EAC7B,QAAM,WAAQ,qBAAqB,CACrC,EDbA,IAAOG,EAAQ,SAAY,CACzB,GAAI,CACF,IAAMC,EAAY,MAAMC,EAAS,EAC3BC,EAAU,mBAAmBF,CAAS,EAC5C,MAAMG,EAAOD,CAAO,CACtB,OAASE,EAAG,CACN,OAAOA,GAAM,UACf,QAAM,aAAU,CACd,MAAO,QAAM,MAAM,QACnB,MAAO,gBACP,QAASA,CACX,CAAC,CAEL,CACF",
  "names": ["encode_exports", "__export", "encode_default", "__toCommonJS", "import_api", "import_api", "isEmpty", "string", "contents", "clipboard", "update", "encode_default", "clipboard", "contents", "encoded", "update", "e"]
}
